plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.android.nortontestapplication"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.android.nortontestapplication.MyTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    def lifecycle_version = "2.6.0-alpha01"
    def room_version = "2.4.3"
    def coroutine_version = "1.6.4"
    def retrofit_version = "2.9.0"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    //Roomdb
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // GSON
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"

    implementation 'androidx.navigation:navigation-fragment:2.5.0'
    implementation "androidx.navigation:navigation-ui-ktx:2.5.0"



    //Unit Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Required to allow mocking of final classes
    testImplementation "org.mockito:mockito-inline:3.6.0"

    // Core mockito library for kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"

    // for Testing architecture components such as liveData, viewModel etc
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"

    // androidx.test
    def androidx_test = "1.1.3"
    androidTestImplementation "androidx.test:runner:$androidx_test"
    androidTestImplementation "androidx.test:core:$androidx_test"
    androidTestImplementation "androidx.test:core-ktx:1.2.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test"

    //Hilt Testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //launchFragmentInContainer
    def fragment_version = "1.3.0-alpha06"
    androidTestImplementation "androidx.fragment:fragment-testing:$fragment_version"

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
}
